#!/usr/bin/env node
'use strict';

var program = require('commander');
var jf = require('jsonfile');
var constants = require('../utils/constants');

program
    .version('0.0.1')
    .option('-r, --reset', 'resets fucks')
    .option('-c, --count', 'total fucks given')
    .option('-l, --list', 'lists all fucks given yet');


program
    .on('*', function (name) {
        console.log('\'' + name + '\' is not a known command. See \'fuck --help\':');
        program.outputHelp();
        process.exit(1);
    });

program
    .parse(process.argv);

if (program.args.length < 1) {

    var json = jf.readFileSync(constants.file);
    var fucks = json['fucks'];

    if (program.reset) {
        jf.writeFileSync(constants.file, JSON.parse(constants.raw));
        console.log('all fucks have been reset.');
    }

    if (program.count) {
        var word = fucks.length === 1 ? 'fuck' : 'fucks';
        console.log('you have given ' + fucks.length + ' ' + word +'!');
    }

    if (program.list) {
        if(fucks.length > 0){
            console.log('\n\n\t\tAll given fucks!');
            console.log('------------------------------------------------\n');


            for(var i = 0; i < fucks.length; i++){
                console.log('    ' +  (i+1) + '. Fuck given at ' + (new Date(fucks[i].time)).toTimeString());
            }
        }
        else{
            console.log('not a single fuck was given, today!')
        }

    }

    if (!program.reset && !program.count && !program.list) {

        fucks.push({time: Date.now()});
        jf.writeFileSync(constants.file, json);

    }

    process.exit(1);
}
